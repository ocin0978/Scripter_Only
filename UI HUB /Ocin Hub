local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/master/source.lua", true))()

local Window = Luna:CreateWindow({
	Name = "Nico Scripts",
	Subtitle = nil,
	LogoID = "82795327169782",
	LoadingEnabled = true,
	LoadingTitle = "Nico Scripts Interface",
	LoadingSubtitle = "By Nico Scripts",

	ConfigSettings = {
		RootFolder = nil,
		ConfigFolder = "Nico Scripts"
	},
})

local Tab = Window:CreateTab({
	Name = "Admin Commands",
	Icon = "tab",
	ImageSource = "Material",
	ShowTitle = true
})

local Button = Tab:CreateButton({
	Name = "Infinite Yield",
	Description = nil,
    	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    	end
})

local Tab = Window:CreateTab({
	Name = "Games",
	Icon = "tab",
	ImageSource = "Material",
	ShowTitle = true
})

Tab:CreateSection("Steal A Brainrot")

local Toggle = Tab:CreateToggle({
	Name = "Godmode",
	Description = nil,
	CurrentValue = false,
	Callback = function(Value)
		_G.Godmode = Value
    if not _G.GodmodeLoop then
	_G.GodmodeLoop = true
	task.spawn(function()
		while true do
			if _G.Godmode then
				local player = game.Players.LocalPlayer
				local character = player.Character
				if character and character:FindFirstChildOfClass("Humanoid") then
					local humanoid = character:FindFirstChildOfClass("Humanoid")

					humanoid.Health = humanoid.MaxHealth

					if humanoid.Health <= 0 then
						humanoid.Health = humanoid.MaxHealth
						humanoid:ChangeState(Enum.HumanoidStateType.Physics)
					end
				end
			end
			task.wait(0)
		end
	end)
end
	end
}, "Toggle")

local Toggle = Tab:CreateToggle({
	Name = "Infinitejump",
	Description = nil,
	CurrentValue = false,
	Callback = function(Value)
		_G.InfiniteJump = Value
    if not _G.InfiniteJumpConnection then
	_G.InfiniteJumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
		if _G.InfiniteJump then
			local player = game.Players.LocalPlayer
			if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
				player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end
	end)
end
	end
}, "Toggle")
