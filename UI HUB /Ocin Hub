local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/master/source.lua", true))()

local Window = Luna:CreateWindow({
	Name = "Nico Scripts",
	Subtitle = nil,
	LogoID = "82795327169782",
	LoadingEnabled = true,
	LoadingTitle = "Nico Scripts Interface",
	LoadingSubtitle = "By Nico Scripts",

	ConfigSettings = {
		RootFolder = nil,
		ConfigFolder = "Nico Scripts"
	},
})

local Tab = Window:CreateTab({
	Name = "Admin Commands",
	Icon = "tab",
	ImageSource = "Material",
	ShowTitle = true
})

local Button = Tab:CreateButton({
	Name = "Infinite Yield",
	Description = nil,
    	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    	end
})

local Tab = Window:CreateTab({
	Name = "Games",
	Icon = "tab",
	ImageSource = "Material",
	ShowTitle = true
})

Tab:CreateSection("Steal A Brainrot")

local Toggle = Tab:CreateToggle({
	Name = "Godmode",
	Description = nil,
	CurrentValue = false,
	Callback = function(Value)
		_G.Godmode = Value
    if not _G.GodmodeLoop then
	_G.GodmodeLoop = true
	task.spawn(function()
		while true do
			if _G.Godmode then
				local player = game.Players.LocalPlayer
				local character = player.Character
				if character and character:FindFirstChildOfClass("Humanoid") then
					local humanoid = character:FindFirstChildOfClass("Humanoid")

					humanoid.Health = humanoid.MaxHealth

					if humanoid.Health <= 0 then
						humanoid.Health = humanoid.MaxHealth
						humanoid:ChangeState(Enum.HumanoidStateType.Physics)
					end
				end
			end
			task.wait(0)
		end
	end)
end
	end
}, "Toggle")

local Toggle = Tab:CreateToggle({
	Name = "Infinitejump",
	Description = nil,
	CurrentValue = false,
	Callback = function(Value)
		_G.InfiniteJump = Value
    if not _G.InfiniteJumpConnection then
	_G.InfiniteJumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
		if _G.InfiniteJump then
			local player = game.Players.LocalPlayer
			if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
				player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end
	end)
end
	end
}, "Toggle")

local player = game.Players.LocalPlayer
local billboards = {}

local function addESP(plr)
    if plr == player or billboards[plr] then return end
    local char = plr.Character or plr.CharacterAdded:Wait()
    local head = char:WaitForChild("Head")
    local bb = Instance.new("BillboardGui")
    bb.Adornee = head
    bb.Size = UDim2.new(0,100,0,20)
    bb.AlwaysOnTop = true
    bb.StudsOffset = Vector3.new(0,2,0)
    bb.Enabled = false
    bb.Parent = player:WaitForChild("PlayerGui")
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.Text = plr.Name
    label.TextColor3 = Color3.new(1,1,1)
    label.TextScaled = true
    label.Parent = bb
    billboards[plr] = bb

    plr.CharacterAdded:Connect(function(newChar)
        local newHead = newChar:WaitForChild("Head")
        bb.Adornee = newHead
    end)
end

game.Players.PlayerRemoving:Connect(function(plr)
    if billboards[plr] then
        billboards[plr]:Destroy()
        billboards[plr] = nil
    end
end)

for _,plr in ipairs(game.Players:GetPlayers()) do
    addESP(plr)
end
game.Players.PlayerAdded:Connect(addESP)

local Toggle = Tab:CreateToggle({
    Name = "ESP Name",
    CurrentValue = false,
    Callback = function(Value)
        for _,bb in pairs(billboards) do
            bb.Enabled = Value
        end
    end
}, "Toggle")
